plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'ru.nsu'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springGrpcVersion', "0.9.0")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.grpc:spring-grpc-dependencies:${springGrpcVersion}"
	}
}

dependencies {
	implementation 'io.grpc:grpc-services'
	implementation 'org.springframework.grpc:spring-grpc-spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail:3.4.3'
	implementation 'org.springframework.boot:spring-boot-starter-freemarker:3.4.3'
	implementation 'org.springframework.boot:spring-boot-configuration-processor:3.4.3'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'io.github.cdimascio:dotenv-java:3.2.0'
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {
				option '@generated=omit'
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
